{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"sNAeeA,EAbF,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAAOC,EAAO,EAAPA,GACzB,OAEE,sBAAKC,UAAU,mDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA2BH,EAA3B,cACrB,gCACE,6BAAKF,IACL,4BAAIC,WCaDK,EAlBE,SAAC,GAAe,IAAdC,EAAa,EAAbA,OACf,OACI,8BAEKA,EAAOC,KAAI,SAACC,EAAMC,GACnB,OACA,cAAC,EAAD,CAEIR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCGNC,EAZG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKV,UAAU,MAAf,SACA,uBACAA,UAAU,mCACVW,KAAM,SACNC,YAAY,gBACZC,SAAWH,OCGJI,EAVA,SAACC,GAEZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKJ,EAAMK,YCsCJC,E,kDAtCX,aAAc,IAAD,8BACT,gBAaJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAACf,YAAac,EAAME,OAAOC,SAbzC,EAAKC,MAAQ,CACTvB,OAAQ,GACRK,YAAa,IAJR,E,gEAQO,IAAD,OACfmB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAM,SAAAG,GAAK,OAAG,EAAKR,SAAS,CAAEpB,OAAO4B,S,+BAOjC,IAAD,EAC2BC,KAAKN,MAA5BvB,EADJ,EACIA,OAAQK,EADZ,EACYA,YACVyB,EAAgB9B,EAAO+B,QAAO,SAAAC,GACpC,OAAOA,EAAMvC,KAAKwC,cAAcC,SAAS7B,EAAY4B,kBAGzD,OAAQjC,EAAOmC,OAGP,sBAAKvC,UAAU,KAAf,UACA,8CACA,cAAC,EAAD,CAAWU,aAAcuB,KAAKX,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,CAAUlB,OAAW8B,SAN5B,+C,GA1BaM,IAAMC,WCOTC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCEdO,IAASC,OAAO,cAAC,EAAD,IACdC,SAASC,eAAe,SAK1BX,M","file":"static/js/main.d573a42e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name, email, id})=> {\r\n    return(\r\n    \r\n      <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n          <img alt='robots' src ={`https://robohash.org/${id}?200x200`} />\r\n          <div>\r\n            <h2>{name}</h2>\r\n            <p>{email}</p>\r\n          </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList = ({robots})  => {\r\n    return(\r\n        <div>\r\n            {\r\n             robots.map((user, i) => {\r\n            return  (\r\n            <Card \r\n                key={i} \r\n                id={robots[i].id} \r\n                name={robots[i].name} \r\n                email={robots[i].email\r\n                }/>\r\n            );\r\n        })\r\n        }\r\n        </div>\r\n    );\r\n}\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n    return(\r\n        <div className='pa2'>\r\n        <input \r\n        className='pa3 ba b--green bg-lightest-blue' \r\n        type ='search' \r\n        placeholder='search robots'\r\n        onChange ={searchChange}\r\n        />\r\n        </div>\r\n    );\r\n}\r\nexport default SearchBox;","import React from 'react';\r\n \r\nconst Scroll = (props) => {\r\n\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '1px solid black', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Scroll;","import React from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\n\r\nclass App extends React.Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            robots: [] ,\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=> response.json())\r\n        .then( users=> this.setState({ robots:users }));\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield: event.target.value})\r\n       \r\n    }\r\n    render(){ \r\n        const { robots, searchfield }= this.state;\r\n        const filteredRobots =robots.filter(robot =>{\r\n        return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\r\n    })\r\n    return !robots.length ?\r\n     <h1>Loading..</h1>:\r\n    ( \r\n            <div className='tc'>\r\n            <h1> RoboFriends</h1>\r\n            <SearchBox searchChange={this.onSearchChange}/>\r\n            <Scroll>\r\n            <CardList robots = { filteredRobots } />\r\n            </Scroll>\r\n            </div>\r\n        );\r\n\r\n    }\r\n    }\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nReactDOM.render(<App/>\n, document.getElementById('root'));\n\n\n\n\nreportWebVitals();\n"],"sourceRoot":""}